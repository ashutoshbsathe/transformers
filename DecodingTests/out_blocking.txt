prefix-tuning sequence length is 10.
Standalone UnifiedSKG [HF generate]
Input: ""SELECT COUNT(prerequisite) FROM course WHERE name = "Advanced Machine Learning" ; structed knowledge: ""
Output:
1 -0.207 <pad> How many prerequisites are there for Advanced Machine Learning courses?</s><pad>
2 -0.225 <pad> How many prerequisites does Advanced Machine Learning have?</s><pad><pad><pad>
3 -0.243 <pad> How many prerequisites are there for Advanced Machine Learning?</s><pad><pad>
4 -0.250 <pad> Count the number of prerequisites for Advanced Machine Learning courses.</s>
----------------------------------------------------------------
Standalone Paraphrase [HF generate]
Input: ""paraphrase: What number of prerequisites exist for the course "Advanced Machine Learning"? </s>""
Output:
1 -0.283 <pad> What are the prerequisites for Advanced Machine Learning?</s><pad>
2 -0.319 <pad> What are the prerequisites for advanced machine learning?</s><pad>
3 -0.339 <pad> What are the prerequisites for Advanced Machine Learning course?</s>
4 -0.341 <pad> What are the prerequisites for advanced machine learning course?</s>
----------------------------------------------------------------
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Joint decoding: 1 - Paraphrase, 2 - UnifiedSKG
Output:
1 -0.782 <pad> How many prerequisites are there for Advanced Machine Learning?</s><pad> tensor([    0,   571,   186, 26840,     7,    33,   132,    21,  8590,  5879,
         6630,    58,     1,     0], device='cuda:0')
2 -0.803 <pad> How many prerequisites are there for Advanced Machine Learning course?</s> tensor([    0,   571,   186, 26840,     7,    33,   132,    21,  8590,  5879,
         6630,   503,    58,     1], device='cuda:0')
3 -0.886 <pad> What are the prerequisites for Advanced Machine Learning?</s><pad><pad> tensor([    0,   363,    33,     8, 26840,     7,    21,  8590,  5879,  6630,
           58,     1,     0,     0], device='cuda:0')
4 -0.894 <pad> How many prerequisites are there for Advanced Machine Learning courses?</s> tensor([    0,   571,   186, 26840,     7,    33,   132,    21,  8590,  5879,
         6630,  2996,    58,     1], device='cuda:0')
----------------------------------------------------------------
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Joint decoding: 1 - UnifiedSKG, 2 - Paraphrase
Output:
1 -0.782 <pad> How many prerequisites are there for Advanced Machine Learning?</s><pad> tensor([    0,   571,   186, 26840,     7,    33,   132,    21,  8590,  5879,
         6630,    58,     1,     0], device='cuda:0')
2 -0.803 <pad> How many prerequisites are there for Advanced Machine Learning course?</s> tensor([    0,   571,   186, 26840,     7,    33,   132,    21,  8590,  5879,
         6630,   503,    58,     1], device='cuda:0')
3 -0.886 <pad> What are the prerequisites for Advanced Machine Learning?</s><pad><pad> tensor([    0,   363,    33,     8, 26840,     7,    21,  8590,  5879,  6630,
           58,     1,     0,     0], device='cuda:0')
4 -0.894 <pad> How many prerequisites are there for Advanced Machine Learning courses?</s> tensor([    0,   571,   186, 26840,     7,    33,   132,    21,  8590,  5879,
         6630,  2996,    58,     1], device='cuda:0')
----------------------------------------------------------------
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32102]), logits2.size() = torch.Size([4, 32102])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Joint decoding: 1 - UnifiedSKG, 2 - UnifiedSKG
Output:
1 -0.413 <pad> How many prerequisites are there for Advanced Machine Learning courses?</s><pad> tensor([    0,   571,   186, 26840,     7,    33,   132,    21,  8590,  5879,
         6630,  2996,    58,     1,     0], device='cuda:0')
2 -0.451 <pad> How many prerequisites does Advanced Machine Learning have?</s><pad><pad><pad> tensor([    0,   571,   186, 26840,     7,   405,  8590,  5879,  6630,    43,
           58,     1,     0,     0,     0], device='cuda:0')
3 -0.485 <pad> How many prerequisites are there for Advanced Machine Learning?</s><pad><pad> tensor([    0,   571,   186, 26840,     7,    33,   132,    21,  8590,  5879,
         6630,    58,     1,     0,     0], device='cuda:0')
4 -0.501 <pad> Count the number of prerequisites for Advanced Machine Learning courses.</s> tensor([    0,     3, 10628,     8,   381,    13, 26840,     7,    21,  8590,
         5879,  6630,  2996,     5,     1], device='cuda:0')
----------------------------------------------------------------
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Trimming to 32102, logits1.size() = torch.Size([4, 32128]), logits2.size() = torch.Size([4, 32128])
next_token_scores.size() = torch.Size([4, 32102])
next_token_scores_processed.size() = torch.Size([4, 32102])
next_token_scores_added.size() = torch.Size([4, 32102])
Joint decoding: 1 - Paraphrase, 2 - Paraphrase
Output:
1 -0.566 <pad> What are the prerequisites for Advanced Machine Learning?</s><pad> tensor([    0,   363,    33,     8, 26840,     7,    21,  8590,  5879,  6630,
           58,     1,     0], device='cuda:0')
2 -0.638 <pad> What are the prerequisites for advanced machine learning?</s><pad> tensor([    0,   363,    33,     8, 26840,     7,    21,  2496,  1437,  1036,
           58,     1,     0], device='cuda:0')
3 -0.678 <pad> What are the prerequisites for Advanced Machine Learning course?</s> tensor([    0,   363,    33,     8, 26840,     7,    21,  8590,  5879,  6630,
          503,    58,     1], device='cuda:0')
4 -0.681 <pad> What are the prerequisites for advanced machine learning course?</s> tensor([    0,   363,    33,     8, 26840,     7,    21,  2496,  1437,  1036,
          503,    58,     1], device='cuda:0')
----------------------------------------------------------------
